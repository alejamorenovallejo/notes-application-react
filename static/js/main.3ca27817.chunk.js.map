{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","show","setShow","texto","setTexto","hidden","setHidden","hiddenDelete","setHiddenDelete","id","setId","listNotes","setListNotes","titleNote","noteDescription","edit","color","filterData","setFilterData","handleClose","handleShow","remove","handleInputChange","element","target","name","value","newListNote","map","note","count","length","Math","max","changeColor","className","Navbar","expand","icon","faFileAlt","Container","fluid","Row","Col","md","Button","variant","onClick","elem","Card","Header","faPaperclip","Body","Text","Footer","faTrashAlt","type","faEdit","filter","Modal","onHide","closeButton","Title","Form","onSubmit","preventDefault","Group","controlId","xs","order","Control","placeholder","onChange","required","as","rows","ButtonToolbar","ButtonGroup","aria-label","newList","item","deleteNote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ca27817.chunk.js","sourcesContent":["import './index.css';\nimport React, { useState } from 'react';\nimport { Button,Form,Container,Row,Col,Modal,ButtonToolbar,ButtonGroup,Card, Navbar} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faTrashAlt,faEdit,faFileAlt,faPaperclip} from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const [texto, setTexto] = useState('Agregar');\n  const [hidden,setHidden] = useState('')\n  const [hiddenDelete,setHiddenDelete] = useState('none')\n  const [id,setId] = useState('');\n  const [listNotes, setListNotes] = useState([]);\n  const [filterData,setFilterData]= useState({id:'',titleNote:'',noteDescription:'',edit:false,color:'default'});\n\n  //Modal Close\n  const handleClose = () => setShow(false);\n\n  //Modal Open  \n  const handleShow = (edit,remove) => {\n    setHidden('');\n    setHiddenDelete('none')\n    if(!remove) {\n      if(!edit) {\n        setFilterData('')\n        setTexto('Agregar');\n      }else{\n        setTexto('Editar');\n      }\n    }else{\n      setTexto('Eliminar');\n    }\n    setShow(true) \n  }\n  \n  //Input Chnage\n  const handleInputChange = (element) => {\n    if(!filterData.edit) {\n      const newListNote = listNotes.map((note) => {\n        return note.id ;\n      });\n      const count = listNotes.length === 0 ? listNotes.length + 1 : Math.max(...newListNote) + 1;\n      setFilterData({\n        ...filterData,\n        id: count,\n        [element.target.name] : element.target.value\n      })\n    }else {\n      setFilterData({\n        ...filterData,\n        [element.target.name] : element.target.value\n      })\n    }\n  } \n\n  //Save Note\n  const saveNote = (element) => {\n    element.preventDefault()\n    if(!filterData.edit) {\n      setListNotes([...listNotes, filterData])\n      setFilterData('')\n    }else {\n      const newListNote = listNotes.map((note) => {\n        if (note.id === filterData.id) {\n          const updatedNote = {\n            ...note,\n            titleNote: filterData.titleNote,\n            noteDescription: filterData.noteDescription,\n            color:filterData.color\n          };\n          return updatedNote;\n        }\n        return note;\n      });\n      setListNotes(newListNote);\n      setFilterData('')\n    }\n    handleClose();\n  } \n\n  //Edit Note\n  const editNote = (value) => {\n    listNotes.filter((element) => (element.id == value)).map((elem) =>  {\n      setFilterData({\n        ...elem,\n        edit:true\n      })\n    })\n    handleShow(true,false);\n  }\n\n  //Delete Alert Note \n  const deleteAlert =(value) => {\n    setId(value)\n    handleShow(false,true);\n    setHiddenDelete('')\n    setHidden('none')\n    setFilterData({\n      ...filterData,\n      color:'default'\n    })\n  }\n\n  //Delete Note \n  const deleteNote =(value) => {\n    const newList = listNotes.filter((item) => item.id !== value);\n    setListNotes(newList);\n    handleClose();\n  }\n\n  //Change Color\n  const changeColor = (color) => {\n    setFilterData({\n      ...filterData,\n      color:color\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar expand=\"lg\">\n        <h1 className=\"text-center\"><FontAwesomeIcon icon={faFileAlt}/> Mis Notas</h1>\n      </Navbar>\n      <Container className=\"d-flex justify-content-center align-items-center h-100\" fluid>\n        <Row>\n          <Col md={12} className=\"space center\">\n            <Button variant=\"dark\" className=\"space\" onClick={()=>{handleShow(false,false)}}>Agregar Nota</Button>\n          </Col>\n          {listNotes.map((elem) =>  (\n            <Col className=\"col-md-3\" key={elem.id}>\n              <Card className={`bg-${elem.color}`}>\n                <Card.Header><FontAwesomeIcon icon={faPaperclip}/>{elem.titleNote}</Card.Header>\n                <Card.Body key={elem.id}>\n                  <Card.Text>{elem.noteDescription}</Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <Button variant=\"outline-dark\"><FontAwesomeIcon icon={faTrashAlt} type=\"button\"  onClick={() => {deleteAlert(elem.id)}}/></Button> \n                  <Button variant=\"outline-dark\"><FontAwesomeIcon icon={faEdit} type=\"button\" onClick={() => {editNote(elem.id)}}/></Button>\n                </Card.Footer>\n              </Card>\n            </Col>\n           ))}\n          <Modal show={show} onHide={handleClose}  >\n            <Modal.Header closeButton className={`bg-${filterData.color}`}>\n                <Modal.Title >{texto} Nota</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className={`bg-${filterData.color}`} >\n              <p className={`d-${hiddenDelete}`}>\n                  ¿Desea Eliminar la nota?\n              </p>\n              <Form onSubmit={saveNote} className={`d-${hidden}`}>\n                <Form.Group controlId=\"formNote\" xs={{ order: 3 }} >\n                  <Form.Control type=\"text\" placeholder=\"Titulo\" name=\"titleNote\"  value={filterData.titleNote} onChange={handleInputChange} required/>\n                </Form.Group>\n                <Form.Group controlId=\"formNote\" xs={{ order: 3 }}>\n                  <Form.Control as=\"textarea\" rows={5} placeholder=\"Añade una nota\" value={filterData.noteDescription} name=\"noteDescription\"  onChange={handleInputChange} required/>\n                </Form.Group>\n                <Form.Group controlId=\"formNote\" xs={{ order: 3 }}>\n                  <Button variant=\"dark\" type=\"submit\">{texto} Nota</Button>\n                </Form.Group>\n                <Form.Group controlId=\"formNote\" xs={{ order: 3 }}>\n                  <ButtonToolbar>\n                    <ButtonGroup className=\"mb-2\" aria-label=\"First group\">\n                      <Button onClick={() => {changeColor(\"warning\")}} variant=\"warning\"></Button> \n                      <Button onClick={() => {changeColor(\"primary\")}} variant=\"primary\"></Button> \n                      <Button onClick={() => {changeColor(\"danger\")}} variant=\"danger\"></Button> \n                      <Button onClick={() => {changeColor(\"success\")}} variant=\"success\"></Button> \n                      <Button onClick={() => {changeColor(\"info\")}} variant=\"info\"></Button>\n                      <Button onClick={() => {changeColor(\"default\")}} variant=\"default\"></Button>\n                      <Button onClick={() => {changeColor(\"secondary\")}} variant=\"secondary\"></Button>\n                    </ButtonGroup>\n                  </ButtonToolbar>\n                </Form.Group>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer className={`d-${hiddenDelete}`}>\n              <Button variant=\"secondary\" onClick={handleClose}>No</Button>\n              <Button variant=\"primary\" onClick={() => {deleteNote(id)}}>Si</Button>\n            </Modal.Footer>\n          </Modal>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}